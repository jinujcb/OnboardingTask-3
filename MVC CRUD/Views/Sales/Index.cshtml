@model MVC_CRUD.Models.ProductSold

@{
    ViewBag.Title = "Index";
}

<body>
    <br />
    <h2>Sale Details</h2>
    <br />

    <a href="#" class="btn btn-primary" data-bind="click: create" margin-left=12px>Add New Sale</a>
    <br />
    <br />
    <table id="SalesTable" class="table table-striped table-bordered" style="width:100%;margin-left:12px">

        <thead>
            <tr>
                <th>Customer Name</th>
                <th>Product Name</th>
                <th>Store Name</th>
                <th>Date Sold</th>
                <th>Action(Edit)</th>
                <th>Action(Delete)</th>
            </tr>
        </thead>

        <tbody id="SalesList" data-bind="foreach: sales">

            <tr>
                <td class="Customer Name" data-bind="text: Customer.Name"></td>
                <td class="Product Name" data-bind="text: Product.Name"></td>
                <td class="Store Name" data-bind="text: Store.Name"> </td>
                <td class="DateSold" data-bind="text: Datesold"></td>
                <td>
                    <a class="btn btn-warning btn-sm " data-bind="click: edit , attr: {'id' : ID} " style="color:white; margin-left:10px"><i class="fa fa-pencil "></i> Edit</a>
                </td>
                <td>
                    <a class="btn btn-danger btn-sm " data-bind="click: del , attr: {'id' : ID} " style="color:white; margin-left:10px"><i class="fa fa-pencil "></i> Delete</a>
                </td>
            </tr>

        </tbody>

    </table>

    @using (Html.BeginForm())
    {
        <div id="Modal" class=" modal fade Modal">
            <div class="modal-dialog">
                <div class="modal-content">
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h3 class="modal-title" id="m_Title" style="margin-right:20px"></h3>
                        @Html.ActionLink("x", "Index", "Sales", new { @class = "close" })
                    </div>

                    <div class="modal-body">
                        @Html.Label("Customer Name")
                        <br />
                        <div id="error0"></div>
                        <select id="Customer_Name" data-bind="options: customers, optionsText: 'Name',optionsValue: 'ID'"></select>
                        <br /> <br />

                        @Html.Label("Product Name")
                        <br />
                        <div id="error1"></div>
                        <select id="Product_Name" data-bind="options: products, optionsText: 'Name',optionsValue: 'ID' "></select>
                        <br /> <br />


                        @Html.Label("Store Name")
                        <br />
                        <div id="error2"></div>
                        <select id="Store_Name" data-bind="options: stores, optionsText: 'Name',optionsValue: 'ID'"></select>
                        <br /> <br />


                        @Html.Label("Date Sold")
                        <br />

                        <input id="Datesold" type="date" class="datepicker" name="date" />
                        @Html.ValidationMessageFor(model => model.Datesold, null, new { @class = "text-danger" })
                    </div>
                    <div class="modal-footer">
                        <input type="submit" value="Save" class="btn btn-primary" id="btnSubmit" />
                        @Html.ActionLink("Close", "Index", "Sales", new { @class = "btn btn-danger" })

                    </div>
                </div>
            </div>
        </div>
    }

    </body>
@section scripts{
    <script>
        $(document).ready(function () {

        ko.validation.init({
            registerExtenders: true,
            messagesOnModified: true,
            insertMessages: true,
            parseInputAttributes: true,
            messageTemplate: null,
            errorClass: 'text-danger'
        }, true);

            function viewModel()
            {
            var self = this;

            self.ID = ko.observable();
            self.Name = ko.observable();
            self.CustomerID = ko.observable();
            self.ProductID = ko.observable();
            self.StoreID = ko.observable();
            self.Datesold = ko.observable();
            self.customers = ko.observableArray([]);
            self.products = ko.observableArray([]);
            self.stores = ko.observableArray([]);
            self.sales = ko.observableArray([])

            var viewModelvalidate1 = ko.validatedObservable([
                self.Datesold = ko.observable().extend({ required: { message: '*' } }),
            ]);//validate object of viewmodel....cannot make two different models and bind hence following this method

           
            $.ajax({
                type: "GET",
                url: "/Sales/GetAllSales",
                success: function (data) {
                    var jsondata = JSON.parse(data);//to change serialised data format
                    for (var item in jsondata) {
                        jsondata[item].Datesold = moment(jsondata[item].Datesold).format('L');//change date format
                    }
                    self.sales(jsondata); //Put the response in ObservableArray
                  
                }
            })
            $.ajax({
                type: "GET",
                url: "/Customer/GetAllCustomers",
                success: function (data) {
                    self.customers(data); //Put the response in ObservableArray
                }
            })

            $.ajax({
                type: "GET",
                url: "/Products/GetAllProducts",
                success: function (data) {
                    self.products(data); //Put the response in ObservableArray
                }
            });
            $.ajax({
                type: "GET",
                url: "/Store/GetAllStores",
                success: function (data) {
                    self.stores(data); //Put the response in ObservableArray
                }
            })

            $("#btnSubmit").on("click", function (ev) {
                var current = {
                    CustomerID: $("#Customer_Name").val(),
                    ProductID: $("#Product_Name").val(),
                    StoreID: $("#Store_Name").val(),
                    Datesold: $("#Datesold").val(),
                }

                if (current.Datesold === '') {
                    viewModelvalidate1.errors.showAllMessages();
                }
              

                if ($('#m_Title').text() === "Create Record") {

                    $.ajax({
                        url: '/Sales/Create',
                        method: 'POST',
                        data: { CustomerID: current.CustomerID, ProductID: current.ProductID, StoreID: current.StoreID, Datesold: current.Datesold },
                        success: function () {
                            location.reload();                           
                        },
                        error: function () {
                            location.reload(); 
                           // alert("error");
                        }
                    })
                }
                else if ($('#m_Title').text() === "Edit Record") {

                    $.ajax({
                        url: '/Sales/Edit',
                        method: 'POST',
                        data: { ID: Id, CustomerID: current.CustomerID, ProductID: current.ProductID, StoreID: current.StoreID, Datesold: current.Datesold },
                        success: function () {
                            location.reload();
                        },
                        error: function () {
                            location.reload(); 
                           // alert("error");
                        }

                    })
                }

            });//in order to check validation submit is added inside viewmodel

        }
      
            self.create = function () {
                $('#Modal').modal({ show: true });
                $('#m_Title').text("Create Record");
            };

            self.edit = function (data, event) {

                Id = event.target.id;

                $.ajax({
                    url: '/Sales/GetSale',
                    method: 'GET',
                    data: { ID: Id },
                    success: function (data) {
                        ID = data.ID
                        return true;
                    },

                })

                $('#Modal').modal({ show: true });
                $('#m_Title').text("Edit Record");
               

            };
            self.del = function (data, event) {

                Id = event.target.id;

                $.ajax({
                    url: '/Sales/GetSale',
                    method: 'GET',
                    data: { ID: Id },
                    success: function (data) {                
                        return true;
                    },

                })
                bootbox.confirm("Are you sure you want to delete?", function (result)//jquery library that has inbuit modals, added in layout and bundle only .js file
                {
                    console.log('This was logged in the callback: ' + result);
                    if (result) {
                        var delete_confirm = true;
                        console.log("true");
                        $.ajax({
                            url: '/Sales/Delete',
                            method: 'POST',
                            data: { ID: Id },
                            success: function () {
                                location.reload();
                                return true;
                            },
                            error: function () {
                                location.reload();
                            }

                        })
                    }
                    else {
                        var delete_confirm = false;
                        location.reload();
                    }
                });
                

            };
            ko.applyBindings(new viewModel());
         
        });//document
     

        

    </script>
}

